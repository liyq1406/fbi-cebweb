package skyline.platform.repository.model;

import java.util.ArrayList;
import java.util.List;

public class THrmDeptTeamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public THrmDeptTeamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdDeptIsNull() {
            addCriterion("id_dept is null");
            return (Criteria) this;
        }

        public Criteria andIdDeptIsNotNull() {
            addCriterion("id_dept is not null");
            return (Criteria) this;
        }

        public Criteria andIdDeptEqualTo(String value) {
            addCriterion("id_dept =", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptNotEqualTo(String value) {
            addCriterion("id_dept <>", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptGreaterThan(String value) {
            addCriterion("id_dept >", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptGreaterThanOrEqualTo(String value) {
            addCriterion("id_dept >=", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptLessThan(String value) {
            addCriterion("id_dept <", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptLessThanOrEqualTo(String value) {
            addCriterion("id_dept <=", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptLike(String value) {
            addCriterion("id_dept like", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptNotLike(String value) {
            addCriterion("id_dept not like", value, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptIn(List<String> values) {
            addCriterion("id_dept in", values, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptNotIn(List<String> values) {
            addCriterion("id_dept not in", values, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptBetween(String value1, String value2) {
            addCriterion("id_dept between", value1, value2, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdDeptNotBetween(String value1, String value2) {
            addCriterion("id_dept not between", value1, value2, "idDept");
            return (Criteria) this;
        }

        public Criteria andIdTeamIsNull() {
            addCriterion("id_team is null");
            return (Criteria) this;
        }

        public Criteria andIdTeamIsNotNull() {
            addCriterion("id_team is not null");
            return (Criteria) this;
        }

        public Criteria andIdTeamEqualTo(String value) {
            addCriterion("id_team =", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamNotEqualTo(String value) {
            addCriterion("id_team <>", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamGreaterThan(String value) {
            addCriterion("id_team >", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamGreaterThanOrEqualTo(String value) {
            addCriterion("id_team >=", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamLessThan(String value) {
            addCriterion("id_team <", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamLessThanOrEqualTo(String value) {
            addCriterion("id_team <=", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamLike(String value) {
            addCriterion("id_team like", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamNotLike(String value) {
            addCriterion("id_team not like", value, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamIn(List<String> values) {
            addCriterion("id_team in", values, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamNotIn(List<String> values) {
            addCriterion("id_team not in", values, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamBetween(String value1, String value2) {
            addCriterion("id_team between", value1, value2, "idTeam");
            return (Criteria) this;
        }

        public Criteria andIdTeamNotBetween(String value1, String value2) {
            addCriterion("id_team not between", value1, value2, "idTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamIsNull() {
            addCriterion("name_team is null");
            return (Criteria) this;
        }

        public Criteria andNameTeamIsNotNull() {
            addCriterion("name_team is not null");
            return (Criteria) this;
        }

        public Criteria andNameTeamEqualTo(String value) {
            addCriterion("name_team =", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamNotEqualTo(String value) {
            addCriterion("name_team <>", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamGreaterThan(String value) {
            addCriterion("name_team >", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamGreaterThanOrEqualTo(String value) {
            addCriterion("name_team >=", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamLessThan(String value) {
            addCriterion("name_team <", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamLessThanOrEqualTo(String value) {
            addCriterion("name_team <=", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamLike(String value) {
            addCriterion("name_team like", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamNotLike(String value) {
            addCriterion("name_team not like", value, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamIn(List<String> values) {
            addCriterion("name_team in", values, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamNotIn(List<String> values) {
            addCriterion("name_team not in", values, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamBetween(String value1, String value2) {
            addCriterion("name_team between", value1, value2, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andNameTeamNotBetween(String value1, String value2) {
            addCriterion("name_team not between", value1, value2, "nameTeam");
            return (Criteria) this;
        }

        public Criteria andDescribeIsNull() {
            addCriterion("describe is null");
            return (Criteria) this;
        }

        public Criteria andDescribeIsNotNull() {
            addCriterion("describe is not null");
            return (Criteria) this;
        }

        public Criteria andDescribeEqualTo(String value) {
            addCriterion("describe =", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeNotEqualTo(String value) {
            addCriterion("describe <>", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeGreaterThan(String value) {
            addCriterion("describe >", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeGreaterThanOrEqualTo(String value) {
            addCriterion("describe >=", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeLessThan(String value) {
            addCriterion("describe <", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeLessThanOrEqualTo(String value) {
            addCriterion("describe <=", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeLike(String value) {
            addCriterion("describe like", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeNotLike(String value) {
            addCriterion("describe not like", value, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeIn(List<String> values) {
            addCriterion("describe in", values, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeNotIn(List<String> values) {
            addCriterion("describe not in", values, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeBetween(String value1, String value2) {
            addCriterion("describe between", value1, value2, "describe");
            return (Criteria) this;
        }

        public Criteria andDescribeNotBetween(String value1, String value2) {
            addCriterion("describe not between", value1, value2, "describe");
            return (Criteria) this;
        }

        public Criteria andCategoryIsNull() {
            addCriterion("category is null");
            return (Criteria) this;
        }

        public Criteria andCategoryIsNotNull() {
            addCriterion("category is not null");
            return (Criteria) this;
        }

        public Criteria andCategoryEqualTo(String value) {
            addCriterion("category =", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotEqualTo(String value) {
            addCriterion("category <>", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryGreaterThan(String value) {
            addCriterion("category >", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryGreaterThanOrEqualTo(String value) {
            addCriterion("category >=", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLessThan(String value) {
            addCriterion("category <", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLessThanOrEqualTo(String value) {
            addCriterion("category <=", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryLike(String value) {
            addCriterion("category like", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotLike(String value) {
            addCriterion("category not like", value, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryIn(List<String> values) {
            addCriterion("category in", values, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotIn(List<String> values) {
            addCriterion("category not in", values, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryBetween(String value1, String value2) {
            addCriterion("category between", value1, value2, "category");
            return (Criteria) this;
        }

        public Criteria andCategoryNotBetween(String value1, String value2) {
            addCriterion("category not between", value1, value2, "category");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated do_not_delete_during_merge Tue Oct 27 20:45:26 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_hrm_dept_team
     *
     * @mbggenerated Tue Oct 27 20:45:26 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}